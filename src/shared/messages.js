export const messages = {
  error: {
    ABSTRACT_CLASS_OBJECT_CREATION: 'Cannot instantiate object of abstract class "{0}".',
    ABSTRACT_METHOD_CALL: 'Cannot call abstract method.',
    CANNOT_MARK_DONE_AS_IN_PROGRESS: 'Cannot mark a done task as in progress.',
    CANNOT_MARK_TODO_AS_DONE: 'Cannot mark a todo task as done.',
    CELL_CONTENT_EXCEEDS_CELL_WIDTH: 'Content length exceeds cell width.',
    DUPLICATE_HEADER_DATA_ROW_KEY: 'Duplicate key for responsive table header data row is not allowed.',
    INVALID_HELP_COMMAND: 'Invalid command for help page. "help" cannot be used as a help command.',
    INVALID_MIN_MAX_LENGTH_RANGE: 'Min length cannot be greater than max length.',
    INVALID_MIN_MAX_VALUE_RANGE: 'Min value cannot be greater than max value.',
    INVALID_RESPONSIVE_TABLE_DATA: 'Invalid data for responsive table. Must be an array of objects.',
    INVALID_RESPONSIVE_TABLE_DATA_ROW: 'Invalid data for responsive table row. Must be an object.',
    INVALID_RESPONSIVE_TABLE_HEADER_DATA: 'Invalid header data for responsive table. Must be an array of objects.',
    INVALID_RESPONSIVE_TABLE_HEADER_DATA_RANGE: 'Invalid range for responsive table header data. Must be greater than zero.',
    INVALID_RESPONSIVE_TABLE_HEADER_DATA_ROW: 'Invalid data for responsive table header row. Must be an object.',
    INVALID_RESPONSIVE_TABLE_HEADER_DATA_ROW_IS_FIXED: 'Invalid isFixed for responsive table header data row. Must be a boolean.',
    INVALID_RESPONSIVE_TABLE_HEADER_DATA_ROW_KEY: 'Invalid key for responsive table header data row. Must be a string.',
    INVALID_RESPONSIVE_TABLE_HEADER_DATA_ROW_LABEL: 'Invalid name for responsive table header data row. Must be a string.',
    INVALID_RESPONSIVE_TABLE_HEADER_DATA_ROW_MISSING_KEY: 'Invalid header data row. Missing key.',
    INVALID_RESPONSIVE_TABLE_HEADER_DATA_ROW_TEXT_ALIGN: 'Invalid text alignment for responsive table header data row. Must be a valid horizontal position.',
    INVALID_RESPONSIVE_TABLE_OPTIONS: 'Invalid type for table options. Must be an object.',
    INVALID_RESPONSIVE_TABLE_OPTIONS_PADDING_LEFT: 'Invalid padding left for responsive table header data row. Must be a number greater than or equal to zero.',
    INVALID_RESPONSIVE_TABLE_OPTIONS_PADDING_RIGHT: 'Invalid padding right for responsive table header data row. Must be a number greater than or equal to zero.',
    INVALID_SPLIT_SIZE_RANGE: 'Invalid range for split size. Must be >= 0.',
    INVALID_SPLIT_SIZE_TYPE: 'Invalid type for split size. Must be a number.',
    INVALID_TABLE_CELL_PADDING_LEFT: 'Invalid type for table cell left padding. Must be a number.',
    INVALID_TABLE_CELL_PADDING_RIGHT: 'Invalid type for table cell right padding. Must be a number.',
    INVALID_TABLE_CELL_SINGLE_COLUMN: 'Invalid type for table cell single column. Must be a boolean.',
    INVALID_TABLE_CELL_TEXT_ALIGN: 'Invalid type for table cell text alignment. Must be a valid horizontal position.',
    INVALID_TABLE_CELL_WIDTH: 'Invalid type for table cell width. Must be a number.',
    INVALID_TABLE_CELL_X_POSITION: 'Invalid type for table cell x position. Must be a valid horizontal position.',
    INVALID_TABLE_CELL_Y_POSITION: 'Invalid type for table cell y position. Must be a valid vertical position.',
    INVALID_TABLE_ROW_CELLS_TYPE: 'Invalid type for table cells options. Must be an array.',
    INVALID_TABLE_ROW_TEXT_ALIGN: 'Invalid type for table row text alignment. Must be a valid horizontal position.',
    INVALID_TABLE_ROW_WIDTH: 'Invalid type for table row width. Must be a number.',
    INVALID_TABLE_ROW_WIDTHS_TYPE: 'Invalid type for table row widths. Must be an array.',
    INVALID_TABLE_ROW_WIDTH_RANGE: 'Invalid width for table row. Must be a positive number.',
    INVALID_TASKS_DATA_TYPE: 'Invalid type for tasks data. Must be an array of Task instances.',
    INVALID_TASK_COMMAND: '"{0}" command is not supported',
    INVALID_TASK_DATA_TYPE: 'Invalid type for task data. Must be an instance of Task.',
    INVALID_TASK_DESCRIPTION: 'Task description is invalid, it must be a non-empty string.',
    INVALID_TASK_ID: 'Task id is invalid, it must be a valid number.',
    INVALID_TASK_STATUS: 'Task status is invalid.',
    NEGATIVE_TABLE_CELL_PADDING_LEFT: 'Table cell left padding cannot be negative.',
    NEGATIVE_TABLE_CELL_PADDING_RIGHT: 'Table cell right padding cannot be negative.',
    NEGATIVE_TABLE_CELL_WIDTH: 'Table cell width cannot be negative.',
    READ_DB_FAILED: 'Failed to read database file.',
    REQUIRD_TABLE_ROW_WIDTH: 'Table row width is required.',
    REQUIRED_TABLE_DATA: 'Table data is required.',
    REQUIRED_TABLE_DATA_ROWS: 'Table data must contain at least one row.',
    REQUIRED_TABLE_DATA_ROWS_CELLS: 'Table data rows must contain cells options.',
    REQUIRED_TABLE_DATA_ROWS_WIDTHS: 'Table data rows must contain widths.',
    REQUIRED_TABLE_ROW_BUFFER: 'Table row buffer is required.',
    REQUIRED_TASK_DESCRIPTION: 'Task description is required.',
    REQUIRED_TASK_ID: 'Task id is required.',
    TASK_ALREADY_DONE: 'Task is already done.',
    TASK_ALREADY_IN_PROGRESS: 'Task is already in progress.',
    TASK_NOT_FOUND: 'There is no task with the given id.',
    TOO_MANY_ARGS: 'Too many arguments are provided, please refer to the help page for the correct usage.',
  },
  success: {
    NO_TASKS_FOUND: 'No tasks found.',
    TASK_ADDED: 'Task has been added successfully.',
    TASK_DELETED: 'Task has been deleted successfully.',
    TASK_MARKED_AS_DONE: 'Task has been marked as done successfully.',
    TASK_MARKED_AS_IN_PROGRESS: 'Task has been marked as in progress successfully.',
    TASK_UPDATED: 'Task has been updated successfully.',
  },
};
